{"version":3,"sources":["redux/dialogs-reducer.js","components/users/users.module.css","assets/images/user.jpg","assets/images/preloader.gif","api/Api.js","components/navbar/Navbar.module.css","serviceWorker.js","components/navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/users/User.jsx","components/users/Users.jsx","redux/users-selectors.js","components/users/UsersContainer.jsx","components/header/Header.jsx","redux/auth-reducer.js","components/header/HeaderContainer.jsx","components/login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.jsx","hoc/WithSuspense.jsx","App.js","index.js","components/common/formsControls/FormsControls.js","components/common/preloader/Preloader.js","components/common/formsControls/FormsControls.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/header/Header.module.css","redux/profile-reducer.js"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","instance","axios","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unFollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","followUnFollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","props","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","alt","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","width","preloader","value","maxLengthCreator","maxLength","posts","likeCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.d0ae9b53.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dialog 1'},\r\n        {id: 2, name: 'Dialog 2'},\r\n        {id: 3, name: 'Dialog 3'},\r\n        {id: 4, name: 'Dialog 4'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Dialog 1'},\r\n        {id: 2, message: 'Dialog 2'},\r\n        {id: 3, message: 'Dialog 3'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__VzMKm\"};","module.exports = __webpack_public_path__ + \"static/media/user.332173a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.e003a706.gif\";","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"74d73d8b-630c-4ab2-91a8-f644d6179a94\"\r\n    }\r\n});\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then((response) => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unFollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolete method. Please use profileAPI object.\");\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1Jdzd\",\"item\":\"Navbar_item__hEdsf\",\"activeLink\":\"Navbar_activeLink__1-oS9\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to={'/profile'} activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/dialogs'} activeClassName={s.activeLink}>Dialogs</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/users'} activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/news'} activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/music'} activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/settings'} activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {userAPI} from \"../api/Api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [\r\n        // {\r\n        //     id: 1,\r\n        //     photoUrl: 'https://store.playstation.com/store/api/chihiro/00_09_000/container/US/en/999/UP3749-CUSA10307_00-AV00000000000025/1581372970000/image?w=240&h=240&bg_color=000000&opacity=100&_version=00_09_000',\r\n        //     followed: false,\r\n        //     fullName: 'Alex',\r\n        //     status: 'I am a boss? yep',\r\n        //     location: {city: 'Penza', country: 'RU'}\r\n        // },\r\n        // {\r\n        //     id: 2,\r\n        //     photoUrl: 'https://store.playstation.com/store/api/chihiro/00_09_000/container/US/en/999/UP3749-CUSA10307_00-AV00000000000025/1581372970000/image?w=240&h=240&bg_color=000000&opacity=100&_version=00_09_000',\r\n        //     followed: true,\r\n        //     fullName: 'Alexa',\r\n        //     status: 'I am not a boss',\r\n        //     location: {city: 'Moscow', country: 'RU'}\r\n        // },\r\n        // {\r\n        //     id: 3,\r\n        //     photoUrl: 'https://store.playstation.com/store/api/chihiro/00_09_000/container/US/en/999/UP3749-CUSA10307_00-AV00000000000025/1581372970000/image?w=240&h=240&bg_color=000000&opacity=100&_version=00_09_000',\r\n        //     followed: false,\r\n        //     fullName: 'Ury',\r\n        //     status: 'I am not a boss? again',\r\n        //     location: {city: 'No', country: 'NO'}\r\n        // }\r\n    ],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await userAPI.getUsers(page, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n    }\r\n};\r\n\r\nconst followUnFollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        await followUnFollowFlow(dispatch, userId, userAPI.follow.bind(userAPI), followSuccess);\r\n    }\r\n};\r\n\r\nexport const unFollow = (userId) => {\r\n    return async (dispatch) => {\r\n        await followUnFollowFlow(dispatch, userId, userAPI.unFollow.bind(userAPI), unfollowSuccess);\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import styles from \"./users.module.css\";\r\nimport React from \"react\";\r\nimport userPhoto from \"../../assets/images/user.jpg\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unFollow, follow}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unFollow(user.id);\r\n                                  }}>\r\n                            UnFollow</button>\r\n                        : <button disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      follow(user.id);\r\n                                  }}>\r\n                            Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{'user.location.city'}</div>\r\n                    <div>{'user.location.country'}</div>\r\n                </span>\r\n            </span>\r\n        </div>)\r\n};\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage}\r\n                   onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount}\r\n                   pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unFollow={props.unFollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n        return users.filter(u => true);\r\n    })\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, setCurrentPage, unFollow, toggleFollowingInProgress, requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching, getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unFollow={this.props.unFollow}\r\n                   toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unFollow, setCurrentPage, toggleFollowingInProgress, requestUsers: requestUsers})\r\n)(UsersContainer);","import React from \"react\";\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src={\"https://tinyjpg.com/images/social/website.jpg\"} alt={\"\"}/>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n};\r\n\r\nexport default Header;","import {authAPI} from \"../api/Api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {id, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData(null, null, null, false))\r\n    }\r\n};\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/formsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from './../common/formsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","let initialState = {\r\n\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    };\r\n};","import React, {Suspense} from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./components/navbar/Navbar\";\r\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/users/UsersContainer\";\r\nimport HeaderContainer from \"./components/header/HeaderContainer\";\r\nimport LoginPage from \"./components/login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/WithSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        } else {\r\n            return <div className={'app-wrapper'}>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className={'app-wrapper-content'}>\r\n                    <Route path={'/dialogs'}\r\n                           render={withSuspense(DialogsContainer  )}/>\r\n                    <Route path={'/profile/:userId?'}\r\n                           render={withSuspense(ProfileContainer)}/>\r\n                    <Route path={'/users'}\r\n                           render={() => <UsersContainer/>}/>\r\n                    <Route path={'/login'}\r\n                           render={() => <LoginPage/>}/>\r\n                </div>\r\n            </div>\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props}/>\r\n        {text}\r\n    </div>\r\n)\r\n","import preloader from \"../../../assets/images/preloader.gif\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <img width={100} src={preloader}/>\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__374av\",\"error\":\"FormsControls_error__37uGw\",\"formSummaryError\":\"FormsControls_formSummaryError__M9iZ8\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3m754\",\"pageNumber\":\"Paginator_pageNumber__O2_UV\",\"selectedPage\":\"Paginator_selectedPage__2ODTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1ENRt\",\"loginBlock\":\"Header_loginBlock__UbQ9H\"};","import {profileAPI, userAPI} from \"../api/Api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likeCount: 10},\r\n        {id: 2, message: 'It\\'s my first post', likeCount: 13}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likeCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await userAPI.getProfile(userId);\r\n\r\n    dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n\r\n    dispatch(setStatus(response.data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}