{"version":3,"sources":["components/dialogs/Dialogs.module.css","components/dialogs/dialogItem/DialogItem.jsx","components/dialogs/message/Message.jsx","components/dialogs/Dialogs.jsx","hoc/WithAuthRedirect.jsx","components/dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","newMessage","React","createRef","messages","ref","onClick","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messageElements","m","newMessageBody","isAuth","dialogItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCWjKC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACtC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCmBnBC,EAxBC,SAACT,GACb,IAAIU,EAAaC,IAAMC,YAEnBC,EAAWF,IAAMC,YAMrB,OAAO,6BACH,6BACI,8BAAUE,IAAKJ,KAEnB,6BACI,4BAAQK,QATC,cAST,SAEJ,yBAAKD,IAAKD,GACN,yBAAKV,UAAWC,IAAEC,QAASL,EAAMgB,Y,yCCevCC,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAfL,SAACpB,GACpB,OACI,0BAAMsB,SAAUtB,EAAMuB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBY,YAAa,qBAAsBrB,KAAM,oBAEpD,6BACI,6CAQDsB,EA7CC,SAAC9B,GACb,IAAI+B,EAAQ/B,EAAMgC,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYC,IAAKD,EAAElC,GAAIM,KAAM4B,EAAE5B,KAAMN,GAAIkC,EAAElC,QACpFoC,EAAkBP,EAAMlB,SAASsB,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASF,IAAKE,EAAErC,GAAIc,QAASuB,EAAEvB,aACxDe,EAAMS,eAM3B,OAAKxC,EAAMyC,OAGP,yBAAKtC,UAAWC,IAAE8B,SACd,yBAAK/B,UAAWC,IAAEsC,aACbT,GAEL,yBAAK9B,UAAWC,IAAES,UACd,6BAAMyB,IAEV,kBAACnB,EAAD,CAAqBG,SAdT,SAACqB,GACjB3C,EAAM4C,YAAYD,EAAOH,oBAGH,kBAAC,IAAD,CAAUjC,GAAI,Y,wCChBxCsC,EAA6B,SAACd,GAAD,MAAY,CACzCU,OAAQV,EAAMe,KAAKL,S,OCeRM,sBACXC,aAdkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACiB,GACtB,MAAO,CACHL,YAAa,SAACJ,GACVS,EAASC,YAAmBV,UDPR,SAACW,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKrD,MAAMyC,OACT,kBAACU,EAAcE,KAAKrD,OADI,kBAAC,IAAD,CAAUO,GAAI,eAHV,GACXI,IAAMwC,WAStC,OAFqCH,YAAQH,EAARG,CAAoCI,KCI9DL,CAGbjB","file":"static/js/4.83b33909.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Mttbb\",\"dialogItems\":\"Dialogs_dialogItems__2CEkV\",\"active\":\"Dialogs_active__1Lc37\",\"messages\":\"Dialogs_messages__35lhI\",\"message\":\"Dialogs_message__AQNiA\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n};\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    let newMessage = React.createRef();\r\n\r\n    let messages = React.createRef();\r\n\r\n    let addMessage = () => {\r\n\r\n    };\r\n\r\n    return <div>\r\n        <div>\r\n            <textarea ref={newMessage}></textarea>\r\n        </div>\r\n        <div>\r\n            <button onClick={addMessage}>Send</button>\r\n        </div>\r\n        <div ref={messages}>\r\n            <div className={s.dialog}>{props.message}</div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./dialogItem/DialogItem\";\r\nimport Message from \"./message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/formsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n    let messageElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       placeholder={'Enter your message'} name={'newMessageBody'}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}